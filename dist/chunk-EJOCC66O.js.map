{"version":3,"sources":["../node_modules/@mui/icons-material/esm/OpenInNew.js","../src/OphLink.tsx"],"names":[],"mappings":";;;;;;;;AAGA,SAAS,OAAO,YAAY;AAC5B,IAAO,oBAAQ,cAA2B,qBAAK,QAAQ;AAAA,EACrD,GAAG;AACL,CAAC,GAAG,WAAW;;;ACLf,SAAS,YAA2C;AAGpD,SAAS,kBAAkB;AAwDrB,SAEyB,KAFzB;AARC,IAAM,UACX,WAAW,SAAS,WAClB,EAAE,aAAa,UAAU,MAAM,GAAG,KAAK,GACvC,KACA;AACA,QAAM,qBACJ,gBAAgB,QAAQ,oBAAoB,KAAK,IAAI;AACvD,SACE,qBAAC,QAAK,MAAa,GAAG,MAAM,KACzB;AAAA;AAAA,IACA,sBAAsB,oBAAC,qBAAU,WAAU,yBAAwB;AAAA,KACtE;AAEJ,CAAC","sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');","import OpenInNew from '@mui/icons-material/OpenInNew';\nimport { Link, type LinkOwnProps, type Theme } from '@mui/material';\nimport { EXTERNAL_LINK_REGEX } from './common';\nimport { type SystemProps } from '@mui/system';\nimport { forwardRef } from 'react';\nimport type {\n  OverridableComponent,\n  OverrideProps,\n} from '@mui/material/OverridableComponent';\n\ntype OmittedPropNames =\n  | keyof SystemProps<Theme>\n  | 'paragraph'\n  | 'TypographyClasses'\n  | 'variantMapping'\n  | 'align'\n  | 'gutterBottom'\n  | 'underline';\n\ninterface OphAdditionalLinkProps {\n  /** Icon visibility override. If not given, icon visibility is deduced from href (relative links without icon) */\n  iconVisible?: boolean;\n}\n\ninterface OphLinkTypeMap<\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  AdditionalProps = {},\n  RootComponent extends React.ElementType = 'a',\n> {\n  props: AdditionalProps & Omit<LinkOwnProps, OmittedPropNames>;\n  defaultComponent: RootComponent;\n}\n\ntype MuiOphLinkProps<\n  RootComponent extends React.ElementType = OphLinkTypeMap['defaultComponent'],\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  AdditionalProps = {},\n> = OverrideProps<\n  OphLinkTypeMap<AdditionalProps, RootComponent>,\n  RootComponent\n> & {\n  component?: React.ElementType;\n};\n\nexport type OphLinkProps<\n  C extends React.ElementType = React.ElementType,\n  D extends React.ElementType = OphLinkTypeMap['defaultComponent'],\n> = {\n  component?: C;\n} & Omit<MuiOphLinkProps<D, OphAdditionalLinkProps>, 'component'>;\n\n// https://github.com/mui/material-ui/issues/32420\nexport const OphLink: OverridableComponent<OphLinkTypeMap<OphLinkProps>> =\n  forwardRef(function renderLink<C extends React.ElementType>(\n    { iconVisible, children, href, ...rest }: OphLinkProps<C>,\n    ref: React.Ref<HTMLAnchorElement> | null,\n  ) {\n    const realIconVisibility =\n      iconVisible ?? (href && EXTERNAL_LINK_REGEX.test(href));\n    return (\n      <Link href={href} {...rest} ref={ref}>\n        {children}\n        {realIconVisibility && <OpenInNew className=\"OphLink-OpenInNewIcon\" />}\n      </Link>\n    );\n  }) as OverridableComponent<OphLinkTypeMap<OphLinkProps>>;\n"]}