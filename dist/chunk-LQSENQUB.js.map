{"version":3,"sources":["../src/OphFormFieldWrapper.tsx"],"names":[],"mappings":";AAyBA;AAAA,EACE;AAAA,EAEA;AAAA,EACA;AAAA,OACK;AACP,SAAS,aAAa;AACtB,SAAS,cAAc;AA2BnB,SAEI,KAFJ;AAzBJ,IAAM,uBAAuB,OAAO,cAAc,EAAE,CAAC,EAAE,MAAM,OAAO;AAAA,EAClE,QAAQ,MAAM,QAAQ,KAAK,CAAC;AAC9B,EAAE;AAaK,IAAM,sBAAsB,CAAC;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAoE;AAClE,QAAM,KAAK,MAAM;AACjB,QAAM,UAAU,QAAQ,uBAAuB,EAAE,WAAW;AAC5D,SACE,qBAAC,eAAa,GAAG,OAAO,OAAO,QAAQ,YAAY,KAAK,MAAM,OAC3D;AAAA,aACC,oBAAC,aAAU,IAAI,SAAS,OAAO,OAC5B,iBACH;AAAA,IAED,cACC,oBAAC,wBAAqB,OAAO,OAAQ,sBAAW;AAAA,IAEjD,YAAY,EAAE,QAAQ,CAAC;AAAA,IACvB,gBACC,oBAAC,wBAAqB,OAAO,MAC1B,0BADqC,YAExC;AAAA,KAEJ;AAEJ","sourcesContent":["/**\n * `OphFieldWrapper` is a React component that wraps form fields with additional\n * functionality such as labels, helper text, and error messages.\n * Form fields components in ODS should already be wrapped and have props for adding label etc.\n * Only use this component if you need to show a form field with additional info and it's not already wrapped with OphFieldWrapper.\n *\n * @param {string} [label] - The label text for the form field.\n * @param {string} [helperText] - The helper text displayed below the input field.\n * @param {string} [errorMessage] - The error message displayed below the input field.\n * @param {Function} renderInput - A function that renders the input component. It receives an object with a `labelId` property.\n * @param {Omit<FormControlProps, 'children'>} props - Additional props to be passed to the `FormControl` component.\n *\n * @returns {JSX.Element} The rendered form field wrapper component.\n *\n * @example\n * ```tsx\n * <OphFieldWrapper\n *   label=\"Username\"\n *   helperText=\"Enter your username\"\n *   errorMessage=\"Username is required\"\n *   renderInput={({ labelId }) => <OphInput inputProps={{ 'aria-labelledby': labelId }} />}\n * />\n * ```\n */\n'use client';\nimport {\n  FormControl,\n  type FormControlProps,\n  FormHelperText,\n  FormLabel,\n} from '@mui/material';\nimport { useId } from 'react';\nimport { styled } from '@mui/material/styles';\n\nconst StyledFormHelperText = styled(FormHelperText)(({ theme }) => ({\n  margin: theme.spacing(0.5, 0),\n}));\n\nexport interface OphFieldWrapperCommonProps {\n  required?: boolean;\n  label?: string;\n  helperText?: string;\n  errorMessage?: string;\n}\n\nexport interface OphFieldWrapperOwnProps extends OphFieldWrapperCommonProps {\n  renderInput: (props: { labelId?: string }) => React.ReactNode;\n}\n\nexport const OphFormFieldWrapper = ({\n  label,\n  renderInput,\n  helperText,\n  errorMessage,\n  ...props\n}: Omit<FormControlProps, 'children'> & OphFieldWrapperOwnProps) => {\n  const id = useId();\n  const labelId = label ? `OphFormFieldWrapper-${id}-label` : undefined;\n  return (\n    <FormControl {...props} error={Boolean(errorMessage) || props.error}>\n      {label && (\n        <FormLabel id={labelId} error={false}>\n          {label}\n        </FormLabel>\n      )}\n      {helperText && (\n        <StyledFormHelperText error={false}>{helperText}</StyledFormHelperText>\n      )}\n      {renderInput({ labelId })}\n      {errorMessage && (\n        <StyledFormHelperText error={true} key={errorMessage}>\n          {errorMessage}\n        </StyledFormHelperText>\n      )}\n    </FormControl>\n  );\n};\n"]}