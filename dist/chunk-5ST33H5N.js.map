{"version":3,"sources":["../src/OphCheckbox.tsx"],"names":[],"mappings":";AAEA;AAAA,EACE;AAAA,EACA;AAAA,OAGK;AACP,SAAgB,kBAAkB;AA+BjB;AAdV,IAAM,cAAc;AAAA,EACzB,SAAS,eACP,EAAE,OAAO,OAAO,uBAAuB,GAAG,MAAM,GAChD,KACA;AACA,UAAM,gBAAgB;AAAA,MACpB,GAAG;AAAA,MACH,OAAO,QAAQ,UAAU,MAAM;AAAA,MAC/B;AAAA,IACF;AACA,WAAO,QACL;AAAA,MAAC;AAAA;AAAA,QACE,GAAG;AAAA,QACJ;AAAA,QACA,SAAS,oBAAC,YAAU,GAAG,eAAe;AAAA;AAAA,IACxC,IAEA,oBAAC,YAAU,GAAG,eAAe;AAAA,EAEjC;AACF","sourcesContent":["'use client';\n\nimport {\n  Checkbox,\n  FormControlLabel,\n  type CheckboxProps,\n  type FormControlLabelProps,\n} from '@mui/material';\nimport React, { forwardRef } from 'react';\n\nexport type OphCheckboxProps = Omit<\n  CheckboxProps,\n  | 'centerRipple'\n  | 'checkedIcon'\n  | 'disableRipple'\n  | 'icon'\n  | 'indeterminateIcon'\n  | 'size'\n  | 'LinkComponent'\n> & {\n  formControlLabelProps?: Omit<FormControlLabelProps, 'label' | 'control'>;\n  label?: React.ReactNode;\n  error?: boolean;\n};\n\nexport const OphCheckbox = forwardRef<HTMLButtonElement, OphCheckboxProps>(\n  function renderCheckbox(\n    { label, error, formControlLabelProps, ...props },\n    ref,\n  ) {\n    const checkboxProps = {\n      ...props,\n      color: error ? 'error' : props.color,\n      ref,\n    };\n    return label ? (\n      <FormControlLabel\n        {...formControlLabelProps}\n        label={label}\n        control={<Checkbox {...checkboxProps} />}\n      />\n    ) : (\n      <Checkbox {...checkboxProps} />\n    );\n  },\n);\n"]}