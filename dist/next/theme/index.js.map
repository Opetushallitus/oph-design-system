{"version":3,"sources":["../../../src/next/theme/theme-nextjs.tsx","../../../src/util.ts","../../../src/next/LinkBehavior.tsx"],"sourcesContent":["'use client';\n\nimport { useMemo } from 'react';\nimport { OphThemeProvider } from '@/src/theme/theme';\nimport { LinkBehavior as LB } from '@/src/next/LinkBehavior';\nimport { Open_Sans } from 'next/font/google';\nimport { deepmerge } from '@mui/utils';\nimport type { OphThemeParams } from '@/src/types';\n\nexport const LinkBehavior = LB;\n\nexport const openSans = Open_Sans({\n  weight: ['400', '600', '700'],\n  subsets: ['latin'],\n  display: 'swap',\n});\n\nexport const MUI_NEXTJS_OVERRIDES = {\n  typography: {\n    fontFamily: openSans.style.fontFamily,\n    label: {\n      fontFamily: openSans.style.fontFamily,\n    },\n  },\n  components: {\n    MuiLink: {\n      defaultProps: {\n        component: LinkBehavior,\n      },\n    },\n    MuiButtonBase: {\n      defaultProps: {\n        LinkComponent: LinkBehavior,\n      },\n    },\n  },\n} as const;\n\nexport function OphNextJsThemeProvider({\n  lang,\n  variant,\n  overrides,\n  children,\n}: OphThemeParams & { children: React.ReactNode }) {\n  const mergedOverrides = useMemo(\n    () => deepmerge(MUI_NEXTJS_OVERRIDES, overrides, { clone: true }),\n    [overrides],\n  );\n\n  return (\n    <OphThemeProvider variant={variant} lang={lang} overrides={mergedOverrides}>\n      {children}\n    </OphThemeProvider>\n  );\n}\n","export const isNonNil = <TValue>(\n  value: TValue | null | undefined,\n): value is TValue => value != null;\n\nexport const isString = (value: unknown): value is string =>\n  typeof value === 'string';\n","import { isString } from '@/src/util';\nimport NextLink, { type LinkProps } from 'next/link';\nimport React from 'react';\nimport { EXTERNAL_LINK_REGEX } from '../common';\n\nexport const LinkBehavior = React.forwardRef<\n  HTMLAnchorElement,\n  React.PropsWithChildren<LinkProps>\n>(function renderLinkBehavior({ href, children, ...props }, ref) {\n  const externalLinkHref =\n    isString(href) && EXTERNAL_LINK_REGEX.test(href) ? href : undefined;\n  return externalLinkHref ? (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      {...props}\n      ref={ref}\n      href={externalLinkHref}\n    >\n      {children}\n    </a>\n  ) : (\n    <NextLink ref={ref} {...props} href={href}>\n      {children}\n    </NextLink>\n  );\n});\n"],"mappings":";;;;;;;;;AAEA,SAAS,eAAe;;;ACEjB,IAAM,WAAW,CAAC,UACvB,OAAO,UAAU;;;ACJnB,OAAO,cAAkC;AACzC,OAAO,WAAW;AAUd;AAPG,IAAM,eAAe,MAAM,WAGhC,SAAS,mBAAmB,EAAE,MAAM,UAAU,GAAG,MAAM,GAAG,KAAK;AAC/D,QAAM,mBACJ,SAAS,IAAI,KAAK,oBAAoB,KAAK,IAAI,IAAI,OAAO;AAC5D,SAAO,mBACL;AAAA,IAAC;AAAA;AAAA,MACC,QAAO;AAAA,MACP,KAAI;AAAA,MACH,GAAG;AAAA,MACJ;AAAA,MACA,MAAM;AAAA,MAEL;AAAA;AAAA,EACH,IAEA,oBAAC,YAAS,KAAW,GAAG,OAAO,MAC5B,UACH;AAEJ,CAAC;;;AFrBD,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB;AA4CtB,gBAAAA,YAAA;AAzCG,IAAMC,gBAAe;AAErB,IAAM,WAAW,UAAU;AAAA,EAChC,QAAQ,CAAC,OAAO,OAAO,KAAK;AAAA,EAC5B,SAAS,CAAC,OAAO;AAAA,EACjB,SAAS;AACX,CAAC;AAEM,IAAM,uBAAuB;AAAA,EAClC,YAAY;AAAA,IACV,YAAY,SAAS,MAAM;AAAA,IAC3B,OAAO;AAAA,MACL,YAAY,SAAS,MAAM;AAAA,IAC7B;AAAA,EACF;AAAA,EACA,YAAY;AAAA,IACV,SAAS;AAAA,MACP,cAAc;AAAA,QACZ,WAAWA;AAAA,MACb;AAAA,IACF;AAAA,IACA,eAAe;AAAA,MACb,cAAc;AAAA,QACZ,eAAeA;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACF;AAEO,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAmD;AACjD,QAAM,kBAAkB;AAAA,IACtB,MAAM,UAAU,sBAAsB,WAAW,EAAE,OAAO,KAAK,CAAC;AAAA,IAChE,CAAC,SAAS;AAAA,EACZ;AAEA,SACE,gBAAAD,KAAC,oBAAiB,SAAkB,MAAY,WAAW,iBACxD,UACH;AAEJ;","names":["jsx","LinkBehavior"]}